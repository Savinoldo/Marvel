{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savin\\\\Desktop\\\\Marvel-api\\\\src\\\\components\\\\charList\\\\CharList.js\";\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false,\n      newItemLoading: false,\n      offset: 210,\n      charEnded: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onRequest = offset => {\n      this.onCharListLoading();\n      this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n    };\n\n    this.onCharListLoading = () => {\n      this.setState({\n        newItemLoading: true\n      });\n    };\n\n    this.onCharListLoaded = newCharList => {\n      let ended = false;\n\n      if (newCharList.length < 9) {\n        ended = true;\n      }\n\n      this.setState(_ref => {\n        let {\n          offset,\n          charList\n        } = _ref;\n        return {\n          charList: [...charList, ...newCharList],\n          loading: false,\n          newItemLoading: false,\n          offset: offset + 9,\n          charEnded: ended\n        };\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.onRequest();\n  }\n\n  renderItems(arr) {\n    const items = arr.map(item => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        onClick: () => this.props.onCharSelected(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error,\n      offset,\n      newItemLoading,\n      charEnded\n    } = this.state;\n    const items = this.renderItems(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        disabled: newItemLoading,\n        style: {\n          'display': charEnded ? 'none' : 'block'\n        },\n        onClick: () => this.onRequest(offset),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n};\nexport default CharList;","map":{"version":3,"names":["Component","PropTypes","Spinner","ErrorMessage","MarvelService","CharList","state","charList","loading","error","newItemLoading","offset","charEnded","marvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","setState","newCharList","ended","length","componentDidMount","renderItems","arr","items","map","item","imgStyle","thumbnail","props","onCharSelected","id","name","render","errorMessage","spinner","content","propTypes","func","isRequired"],"sources":["C:/Users/savin/Desktop/Marvel-api/src/components/charList/CharList.js"],"sourcesContent":["import {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => this.props.onCharSelected(item.id)}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        \n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}